 /*
  * Copyright 2012 Michael Bischoff
  *
  * Licensed under the Apache License, Version 2.0 (the "License");
  * you may not use this file except in compliance with the License.
  * You may obtain a copy of the License at
  *
  *   http://www.apache.org/licenses/LICENSE-2.0
  *
  * Unless required by applicable law or agreed to in writing, software
  * distributed under the License is distributed on an "AS IS" BASIS,
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  */
  
grammar de.jpaw.persistence.dsl.BDDL with de.jpaw.bonaparte.dsl.BonScript
//grammar de.jpaw.persistence.dsl.BDDL with org.eclipse.xtext.common.Terminals

generate bDDL "http://www.jpaw.de/persistence/dsl/BDDL"

import "http://www.jpaw.de/bonaparte/dsl/BonScript" as pojos

Model:
    includes        += IncludeDefinition*
    imports         += ImportDefinition*
    (defaults        = DefaultsDefinition)?
    packages        += PackageDefinition*
;
    
QualifiedId: 
    ID ('.' ID)*
;

QualifiedIdWithWildcard: 
    QualifiedId ('.*')?
;

IncludeDefinition:
    'include' importURI=STRING
;
ImportDefinition:
    'import' importedNamespace=QualifiedIdWithWildcard
;

DefaultsDefinition:
    'default' {DefaultsDefinition}
    ('tablenamepattern' namePattern=STRING ('dropSuffix' dropSuffix=STRING)?)?
    (('tablespacepattern' tablespacePattern=STRING) | 
     ('tablespace' tablespaceName=ID ('index' indexTablespacename=ID)?))?
    ';'
;

enum Permission:
    SELECT='SELECT'|INSERT='INSERT'|UPDATE='UPDATE'|DELETE='DELETE';
    
PermissionList:
    (permissions += Permission (',' permissions += Permission)*);
    
GrantList:
    roleOrUserName = ID ':' permissions = PermissionList ';';
    
GrantCategoryDefinition:
    'grants' name=ID '{' grants += GrantList* '}';


TableCategoryDefinition:
    'category' name=ID '{'
    ('trackinggroup' trackingColumns=[pojos::ClassDefinition])?  
    ('tablenamepattern' namePattern=STRING ('dropSuffix' dropSuffix=STRING)?)?
    (('tablespacepattern' tablespacePattern=STRING) | 
     ('tablespace' tablespaceName=ID ('index' indexTablespacename=ID)?))?
    ('history' historyCategory=[TableCategoryDefinition])?
    ('historyColumn' historyColumn = ID)?  // TODO: currently unchecked  
    (requiresPk ?= 'requiresPK')?
    ('grants' grantGroup = [GrantCategoryDefinition])?
    '}'
;

PackageDefinition:
    (javadoc = JAVADOC_COMMENT)?
    'package' ('(' prefix=QualifiedId ')')? name=QualifiedId // prefix is generated but not stored in serialized form, default is de.jpaw.bonaparte.pojos
        ('bundle' bundle = QualifiedId)?  // bundles are coarser structures than packages, they correspond to OSGi bundles
        'owner'  schemaOwner = ID
        'prefix' dbPrefix = ID
        (noUserTypes ?= 'noUserTypes')?     // do not use JodaTime and ByteArray in entity classes directly, but convert in getters/setters
    '{' 
        ('fields' visibility=Visibility ';')?
        grantCategories += GrantCategoryDefinition* 
        tableCategories += TableCategoryDefinition*
        // xpojos += ClassDefinition*   // can fail because BonScript assumes that the parent of a ClassDefinition is a BonScript Package
        entities += EntityDefinition*
    '}'
;

enum Inheritance:
    NONE='none' | SINGLE_TABLE='singleTable' | TABLE_PER_CLASS='tablePerClass' | JOIN='join' | DB_SPECIFIC='objectRelational' | SERIALIZED='serialized';

EntityDefinition:
    (javadoc = JAVADOC_COMMENT)?
    (isDeprecated?='@Deprecated')?
    ('@Generator' '(' (noJava?='noJava' | noMapper?='noMapper' | mappedSuperclass?='mappedSuperclass') ')')?
    (isAbstract?='abstract')?
    'entity' name = ID      // abstract means mappedSuperclass
        // 'type' tabletype=TableType
        'category' tableCategory=[TableCategoryDefinition]
        'is' pojoType=[pojos::ClassDefinition]
        ('tablename' tablename = ID)?  // overwrite auto-generated tablename
        ('tablespace' tablespaceName=ID ('index' indexTablespacename=ID)?)?
        ('inheritance' xinheritance=Inheritance ('discriminator' discname=ID ((discriminatorTypeInt ?= 'int') | discriminatorValue=STRING))?
         | ('inherits' (extends=[EntityDefinition|QualifiedId] 'discriminator' discriminatorValue=STRING)))?
        (('extends' extendsClass=[pojos::ClassDefinition])  // unused / unusable?
         | ('extendsJava' extendsJava=QualifiedId)
        )?
        ('implements' implementsInterface = QualifiedId )?
    '{'
        ('fields' visibility=Visibility ';')?
        (cacheable ?= 'cacheable')?
        // EclipseLink specific caching: do not use
        ('cache'  cacheSize=INT 'objects' 'for' cacheExpiry=INT cacheExpiryScale = ('second'|'seconds' | 'minute'|'minutes' | 'hour'|'hours' | 'day'|'days'))?
        ('tenant' tenantId = SingleColumn)?
        ('pk'     pk       = ListOfColumns)?
        ('index'  index   += ListOfColumns)* 
    '}'       
;

// by customer ScopeProvider implementation, an appropriate importedNamespace will be added here
ListOfColumns:
    (isUnique ?= 'unique')?
    '(' columnName += [pojos::FieldDefinition] (',' columnName += [pojos::FieldDefinition])* ')'    
;
// by customer ScopeProvider implementation, an appropriate importedNamespace will be added here
SingleColumn:
    singleColumnName = [pojos::FieldDefinition]    
;
